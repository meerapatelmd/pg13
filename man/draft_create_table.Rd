% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create.R
\name{draft_create_table}
\alias{draft_create_table}
\title{Draft SQL to Create a Table}
\usage{
draft_create_table(schema, table_name, if_not_exists = TRUE, ...)
}
\arguments{
\item{...}{Named vector of field names and their corresponding data definition.}
}
\description{
Draft a SQL that creates a table using DDL derived from a dataframe. Drafting is stopped if the given tablename or fields in the dataframe are a SQL reserve word.
}
\examples{
library(pg13)
create_test_schema <-
        function(conn) {

                if (!schema_exists(conn = conn,
                                   schema = "test_schema")) {

                        create_schema(conn = conn,
                                      schema = "test_schema")

                }
        }

conn <- local_connect(dbname = "pg13_test")
create_test_schema(conn = conn)

# Write a table
write_table(conn = conn,
            schema = "test_schema",
            table_name = "test_table",
            drop_existing = TRUE,
            data = data.frame(A = 1:3, B = letters[1:3]))

# Write the same table using create_table() instead
create_table(conn = conn,
             schema = "test_schema",
             table_name = "test_table_b",
             if_not_exists = TRUE,
             A = "integer",
             B = "varchar(1)")

append_table(conn = conn,
             schema = "test_schema",
             table = "test_table_b",
             data = data.frame(A = 1:3, B = letters[1:3]))

# Under the hood is the draft_create_table()
draft_create_table(schema = "test_schema",
                   table_name = "test_table_b",
                   A = "integer",
                   B = "varchar(1)")

# The DDL can be automatically discerned using create_table_from_df()
create_table_from_df(conn = conn,
                     schema = "test_schema",
                     table_name = "test_table_c",
                     data = data.frame(A = 1:3, B = letters[1:3]))

# Under the hood is the draft_create_table_from_df()
draft_create_table_from_df(schema = "test_schema",
                           table_name = "test_table_c",
                           data = data.frame(A = 1:3, B = letters[1:3]))

drop_schema(conn = conn,
            schema = "test_schema",
            cascade = TRUE)

dc(conn = conn)
}
\seealso{
\code{\link[rlang]{list2}}
\code{\link[SqlRender]{render}}

Other create functions: 
\code{\link{create_schema}()},
\code{\link{create_table_from_df}()},
\code{\link{create_table}()},
\code{\link{draft_create_table_from_df}()}

Other draft functions: 
\code{\link{draft_base}()},
\code{\link{draft_create_table_from_df}()},
\code{\link{draft_in}()},
\code{\link{draft_join}()},
\code{\link{draft_limit}()},
\code{\link{draft_random}()},
\code{\link{draft_table_path}()},
\code{\link{draft_where_in}()},
\code{\link{draft_where_like}()},
\code{\link{draft_where_lower_in}()},
\code{\link{draft_where_lower_like}()},
\code{\link{draft_where_lower_not_in}()},
\code{\link{draft_where_not_in}()},
\code{\link{paste_wheres}()},
\code{\link{table.path}()}
}
\concept{create functions}
\concept{draft functions}
