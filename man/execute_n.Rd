% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/query.R
\name{execute_n}
\alias{execute_n}
\title{Query with more than 1 SQL Statements}
\usage{
execute_n(
  conn,
  sql_statements,
  render_sql = TRUE,
  profile = FALSE,
  progressBar = TRUE,
  reportOverallTime = TRUE,
  errorReportFile = file.path(getwd(), "errorReportSql.txt"),
  runAsBatch = FALSE
)
}
\arguments{
\item{conn}{A connection object returned by \code{connect()}.}

\item{sql_statements}{A list or vector of SQL Statements of length 1 or greater.}

\item{render_sql}{If TRUE, the SQL statement for the operation is returned in the console.}

\item{profile}{When true, each separate statement is written to file prior to sending to
the server, and the time taken to execute a statement is displayed.}

\item{progressBar}{When true, a progress bar is shown based on the statements in the SQL
code.}

\item{reportOverallTime}{When true, the function will display the overall time taken to execute
all statements.}

\item{errorReportFile}{The file where an error report will be written if an error occurs. Defaults to
'errorReportSql.txt' in the current working directory.}

\item{runAsBatch}{When true the SQL statements are sent to the server as a single batch, and 
executed there. This will be faster if you have many small SQL statements, but
there will be no progress bar, and no per-statement error messages. If the 
database platform does not support batched updates the query is executed without
batching.}
}
\description{
Query multiple SQL Statements in a single function call.
}
