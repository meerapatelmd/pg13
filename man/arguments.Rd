% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/args-package.R
\name{arguments}
\alias{arguments}
\title{Arguments}
\arguments{
\item{data}{A dataframe or tibble.}

\item{sql_statement}{A SQL Statement.}

\item{sql_statements}{A list or vector of SQL Statements of length 1 or greater.}

\item{schema}{The target schema for the operation.}

\item{tableName}{The target table in the \code{schema} for an operation or for writing functions, the name of the table that will be created.}

\item{verbose}{If TRUE, details on the activity are returned in the console, such as when the querying starting and was completed.}

\item{render_sql}{If TRUE, the SQL statement for the operation is returned in the console.}

\item{predicate}{Evaluating function.}

\item{stop_message}{Message to receive with the \code{predicate} evaluates to true.}

\item{arguments}{(option) character vector of arguments for the new function. If missing, the new function will not have any arguments. Arguments in the \code{predicate} should also be considered. For example, if the predicate is "is.logical(x)", the \code{arguments} value should be "x".}

\item{.data}{A dataframe or tibble.}

\item{db}{name of database}

\item{sqlQuery}{sql statement of length 1 that will be the sole key for cache retrieval.}

\item{object}{R object to cache.}

\item{remove}{If TRUE, the Connection object argument is removed from the parent environment.}

\item{vector}{vector of values that the SQL query is filtering for}

\item{field}{Single field to be filtered for}

\item{term}{Character string that the field parameter is searched for.}

\item{warn_message}{Message to receive with the \code{predicate} evaluates to true.}

\item{dbname}{Name of a local Postgres database, Default: 'athena'}

\item{port}{The port on the server to connect to, Default: 5432}

\item{datetime_field}{PARAM_DESCRIPTION}

\item{log_table}{PARAM_DESCRIPTION}

\item{conn}{Connection object}

\item{file}{path to sql file}

\item{warn_no_rows}{If TRUE, a warning is given that query has returned 0 rows.}

\item{cascade}{If TRUE, a DROP SCHEMA CASCADE is performed.}

\item{group}{group name, Default: NULL}

\item{user}{user name, Default: NULL}

\item{fields}{Fields selected for. Defaults to "*".}

\item{distinct}{If TRUE, the distinct row count will be returned.}

\item{resultTableName}{Table that the final output will be written to.}

\item{sqlList}{list object of queries}

\item{progressBar}{If TRUE, a progress bar is returned in the console.}

\item{skipErrors}{If TRUE, if a SQL execution returns an error, the statement is printed back in red in the console and the iteration will proceed to the next sql statement in line.}

\item{errorFile}{(optional) path to the error file where any errors are written to if not null.}

\item{if_exists}{If TRUE, the table will be dropped only if it exists.}

\item{case_insensitive}{If TRUE, both sides of the query are converted to lowercase.}

\item{values}{Vector of length 1 or greater to search for.}

\item{instSubdir}{Name of subdirectory in the inst/ folder}

\item{FileName}{Name of file in subdirectory}

\item{package}{Package name}
}
\description{
Arguments
}
