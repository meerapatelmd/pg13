% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deprecated.R
\name{searchTable}
\alias{searchTable}
\title{Search a Table for a Value}
\usage{
searchTable(
  conn,
  schema,
  tableName,
  ...,
  values,
  case_insensitive = TRUE,
  verbose = TRUE,
  render_sql = TRUE
)
}
\arguments{
\item{...}{(Optional) Character strings of 1 or more fields in the table to search in.}

\item{values}{Vector of length 1 or greater to search for.}

\item{case_insensitive}{If TRUE, both sides of the query are converted to lowercase.}
}
\description{
Loop a query for a set of one or more values in a table across all the existing fields or optionally, a subset of the fields. Both the values and the table fields are ensured compatibility by 1. Converting each value in the \code{values} argument to the character class and 2. Casting each table field as varchar in the query.
}
\examples{
library(pg13)
create_test_schema <-
        function(conn) {

                if (!schema_exists(conn = conn,
                                   schema = "test_schema")) {

                        cli::cli_rule("Create 'test_schema' Schema")

                        create_schema(conn = conn,
                                      schema = "test_schema")

                }
        }

conn <- local_connect(dbname = "pg13_test")
create_test_schema(conn = conn)

# Write a table without dropping
write_table(conn = conn,
            schema = "test_schema",
            table_name = "test_table2",
            drop_existing = FALSE,
            data = data.frame(A = 1:3, B = letters[1:3]))

# Write a table with dropping
write_table(conn = conn,
            schema = "test_schema",
            table_name = "test_table",
            drop_existing = TRUE,
            data = data.frame(A = 1:3, B = letters[1:3]))




append_table(conn = conn,
             schema = "test_schema",
             table = "test_table",
             data = data.frame(A = 1:3, B = letters[1:3]))

append_table(conn = conn,
             schema = "test_schema",
             table = "test_table",
             data = data.frame(A = 1:3, B = rep(NA_character_, 3)))

test_data <- read_table(conn = conn,
                           schema = "test_schema",
                           table = "test_table")

test_data

search_table(conn = conn,
             schema = "test_schema",
             table = "test_table",
             values = 1:3)

search_table(conn = conn,
             schema = "test_schema",
             table = "test_table",
             values = "a")

search_table(conn = conn,
             schema = "test_schema",
             table = "test_table",
             values = c("A", "b", "C"),
             case_insensitive = FALSE)

drop_table(conn = conn,
           schema = "test_schema",
           table = "test_table",
           if_exists = FALSE,
           data = data.frame(A = 1:3, B = rep(NA_character_, 3)))

drop_table(conn = conn,
           schema = "test_schema",
           table = "test_table2",
           if_exists = FALSE,
           data = data.frame(A = 1:3, B = rep(NA_character_, 3)))

drop_schema(conn = conn,
            schema = "test_schema",
            cascade = TRUE)

dc(conn = conn)
}
\seealso{
Other table functions: 
\code{\link{appendTable}()},
\code{\link{append_table}()},
\code{\link{drop_table}()},
\code{\link{read_table}()},
\code{\link{search_table}()},
\code{\link{write_table}()}
}
\concept{table functions}
