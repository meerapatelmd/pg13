% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/decamel-cache.R, R/decamel-decamel-cache.R
\name{load_cache}
\alias{load_cache}
\title{Load a Cached Resultset from a SQL Query}
\usage{
load_cache(sql_statement, hrs_expired = 8, dirs)

load_cache(sql_statement, hrs_expired = 8, dirs)
}
\arguments{
\item{sql_statement}{SQL Statement from which a hexadecimal hash code was be generated and appended to the cache filename. See \code{\link{cache}} for more information.}

\item{dirs}{Argument passed to \code{\link[R.cache]{findCache}} and \code{\link[R.cache]{loadCache}}}
}
\value{
Resultset if the cached file exists and is not expired and NULL otherwise.

Resultset if the cached file exists and is not expired and NULL otherwise.
}
\description{
Load a resultset from a "fantasia" cache directory with the SQL Statement as the key if it was previously cached or is within expiration period as indicated by the \code{hrs_expired} argument. This function is a wrapper around the \code{\link[R.cache]{loadCache}} function.

Load a resultset from a "fantasia" cache directory with the SQL Statement as the key if it was previously cached or is within expiration period as indicated by the \code{hrs_expired} argument. This function is a wrapper around the \code{\link[R.cache]{loadCache}} function.
}
\details{
An expiration period is incorporated by first determining the cache path and its mtime from the file information. If the cache file exists, the resultset will be returned if the the difference between the current time and the mtime of the cache file is less than or equal to the \code{hrs_expired} value.

An expiration period is incorporated by first determining the cache path and its mtime from the file information. If the cache file exists, the resultset will be returned if the the difference between the current time and the mtime of the cache file is less than or equal to the \code{hrs_expired} value.
}
\seealso{
Other cache functions: 
\code{\link{cache}()}

Other cache functions: 
\code{\link{cache}()}
}
\concept{cache functions}
